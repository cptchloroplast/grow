name: build
on:
  workflow_run:
    workflows: [test]
    types: [completed]
  workflow_dispatch:
env:
  branch: ${{ (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch) || github.event.workflow_dispatch.ref }}
  registry: ghcr.io
  image: okkema.grow
jobs:
  api:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch }}
      - name: Build and push api Docker image
        uses: ./.github/actions/docker-build-push
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.image }}.api
          context: server
          target: api
  worker:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch }}
      - name: Build and push worker Docker image
        uses: ./.github/actions/docker-build-push
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.image }}.worker
          context: server
          target: worker
  migrations:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch }}
      - name: Build and push migrations Docker image
        uses: ./.github/actions/docker-build-push
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.image }}.migrations
          context: server
          target: migrations
  app:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch }}
      - name: Build and push app Docker image
        uses: ./.github/actions/docker-build-push
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.image }}.app
          context: app
  client:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch }}
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install PlatformIO
        run: pip install platformio
      - name: Build client with PlatformIO
        run: make client.build